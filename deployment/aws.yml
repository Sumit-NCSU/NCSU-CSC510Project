- name: Create a AWS EC2 instance
  hosts: localhost
  gather_facts: False
  user: ubuntu
  vars:
    keypair: se_slack_key             # All the variables that will be used
    instance_type: t2.micro
    security_group: launch-wizard-1
    image: ami-aa2ea6d0
    region: us-east-1
    group_name: SE_Slack_server
  tasks:

    # Install pip as pre-req to create AWS ec2 instance 
    - name : Install pip
      apt: pkg=python-pip update_cache=yes state=present
      become: true
    
    # Install boto and boto3 as pre req for automating ec2 instance
    - name: Install boto and boto3
      pip:
        name: "{{ item }}"
      with_items:
        - boto
        - boto3

    # Module for launching AWS EC2 instance
    - name: Launch instance
      ec2:
         aws_access_key: #<<AWS_ACCESS_KEY>> goes here
         aws_secret_key: #<<AWS_SECRET_KEY>> goes here
         key_name: "{{ keypair }}"
         group: "{{ security_group }}"
         instance_type: "{{ instance_type }}"
         image: "{{ image }}"
         wait: true
         region: "{{ region }}"
         vpc_subnet_id: subnet-55a5c469
         assign_public_ip: yes
         instance_tags:
            Name: "{{ group_name }}"
      register: ec2

    # Adding the instance to host group
    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: launched
        ansible_ssh_user: ubuntu
        ansible_ssh_private_key_file: "/home/{{ansible_ssh_user}}/keys/{{keypair}}.pem"
      with_items: "{{ ec2.instances }}"


    # Waiting to ssh into new instance
    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        delay: 60
        timeout: 1000
        state: started
      with_items: "{{ ec2.instances }}"

    # Adding group name to inventory
    - name: Add group name to inventory file
      local_action: lineinfile dest=/home/vagrant_data/deployment/inventory insertafter=EOF line="[{{ group_name }}]" state=present create=yes
      with_items: "{{ ec2.instances }}"

    # Adding host ip to inventory
    - name: Add vm to group
      local_action: lineinfile dest=/home/vagrant_data/deployment/inventory regexp="{{ item.public_ip }}" insertafter="[{{ group_name }}]" line="{{ item.public_ip }} ansible_ssh_user=ubuntu ansible_ssh_private_key_file=/home/{{ansible_ssh_user}}/keys/{{keypair}}.pem ansible_python_interpreter=/usr/bin/python3 ansible_ssh_common_args='-o StrictHostKeyChecking=no'" state=present
      with_items: "{{ ec2.instances }}"

# Start the role created from provisioning the IP
- name: Start the role
  hosts: all
  become: true
  gather_facts: no
  
  vars_prompt:
  - name: git_username
    prompt: Please enter your github username
    private: no

  - name: git_password
    prompt: Please enter your github password
    private: yes
  
  pre_tasks:
    - name: Install Python for Ansible
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
      changed_when: False
      become: yes
    - setup: # aka gather_facts

  roles: 
    - provision